name: local-test

on:
  workflow_run:
    workflows:
      - docker-test-build
    types:
      - completed

jobs:
  test:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r test_requirements.txt
    - name: Wait for and download docker image artifact
      uses: ./.github/actions/download-docker-artifact
      with:
        repo-read-token: ${{ secrets.GH_PAT }}
        build-type: 'test'
    - name: Docker compose
      shell: bash
      run: |
        export GF_PASSWORD=admin
        export DASHBOARD_UID=bdgisvc9bvym8bdashboard
        export DOMAIN_NAME=localhost
        export PUBLIC_PORT=8080
        export PUBLIC_PORT_TLS=8443  # Dummy value, not used
        docker compose -f compose-test.yaml up --force-recreate &
        # wait for the grafana server to start
        _grafana_get() {
            CURL_OUTPUT=$(curl -u admin:admin \
            -X GET "http://localhost:3000/api/datasources" \
            -H "content-type: application/json")
        }
        _grafana_get
        while [[ "$?" -ne 0 ]]; do
            sleep 5
            _grafana_get
        done
        sleep 5
    - name: local test
      shell: bash
      run: python -m pytest test_*.py
