# Config file for nginx to enable grafana public dashboard at custom URL
# Put this file into /etc/nginx/conf.d/ then restart the nginx service.

# TEST version: all TLS parts removed, otherwise the same as release.

# Size limits to prevent attacks
client_body_buffer_size  3K;
client_header_buffer_size 3k;
client_max_body_size 80k;
large_client_header_buffers 2 10k;

# Rate limiting:
limit_req_zone $binary_remote_addr zone=ratelim:10m rate=30r/m;
# But also note that a large burst is needed because grafana dashboard
# loads many resources.

# Connection limiting:
limit_conn_zone $binary_remote_addr zone=addr:5m;
# Limit the number of simultaneous connections for one session
# (from a single ip address)
limit_conn addr 5;

# This is required to proxy Grafana Live WebSocket connections.
# In addition, need to set the GF_SERVER_DOMAIN variable in the Grafana config.
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

# Hide nginx version
server_tokens off;

server {
    limit_req zone=ratelim burst=50 nodelay;

    listen 80;
    listen [::]:80;
    http2 on;
    server_name $DOMAIN_NAME www.$DOMAIN_NAME;

    location /health-check {
        add_header Content-Type text/plain;
        return 200 "success";
    }

    # Redirect a specific URL (NB: 302 = temporary, so don't cache etc)
    location = /grafana-public {
        return 302 $scheme://$DOMAIN_NAME:$PUBLIC_PORT/public-dashboards/$PUBLIC_DASHBOARD_ID;
    }

    location = / {
        return 302 $scheme://$DOMAIN_NAME:$PUBLIC_PORT/public-dashboards/$PUBLIC_DASHBOARD_ID;
    }

    location / {
        proxy_set_header Host $http_host;
        proxy_pass http://grafana:3000;
    }

    # Proxy Grafana Live WebSocket connections.
    location /api/live/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_pass http://grafana:3000;
    }

    error_page 503 /503.html;
    location = /503.html {
        root /usr/share/nginx/html;
        internal;
    }
}

server {
    limit_req zone=ratelim burst=50 nodelay;

    listen 80;
    listen [::]:80;
    http2 on;
    server_name vat.$DOMAIN_NAME;

    location / {
        proxy_set_header Host $http_host;
        proxy_pass http://vat:8000/;
    }

    error_page 503 /503.html;
    location = /503.html {
        root /usr/share/nginx/html;
        internal;
    }
}

server {
    limit_req zone=ratelim burst=50 nodelay;

    listen 80;
    listen [::]:80;
    http2 on;
    server_name grafana.$DOMAIN_NAME;

    location / {
        return 302 $scheme://$DOMAIN_NAME:$PUBLIC_PORT/public-dashboards/$PUBLIC_DASHBOARD_ID;
    }

    error_page 503 /503.html;
    location = /503.html {
        root /usr/share/nginx/html;
        internal;
    }
}
